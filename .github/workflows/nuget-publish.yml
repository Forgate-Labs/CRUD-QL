name: Publish NuGet Package

on:
  push:
    branches:
      - nuget

jobs:
  publish:
    runs-on: ubuntu-latest
    environment: secrets
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Fetch main branch
        run: git fetch origin main

      - name: Extract package version
        id: package_version
        run: |
          version=$(grep -oPm1 '(?<=<Version>)[^<]+' CrudQL/CrudQL.Service/CrudQL.Service.csproj)
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "PACKAGE_VERSION=$version" >> $GITHUB_ENV

      - name: Restore dependencies
        run: dotnet restore CrudQL/CrudQL.sln

      - name: Build solution
        run: dotnet build CrudQL/CrudQL.sln --configuration Release --no-restore

      - name: Pack service project
        run: dotnet pack CrudQL/CrudQL.Service/CrudQL.Service.csproj --configuration Release --no-build --output out

      - name: Publish package to NuGet
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: dotnet nuget push out/*.nupkg --source https://api.nuget.org/v3/index.json --api-key "$NUGET_API_KEY" --skip-duplicate

      - name: Generate release notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          version="${PACKAGE_VERSION:-${{ steps.package_version.outputs.version }}}"
          repo="${GITHUB_REPOSITORY}"
          merge_commits=$(git log origin/main..HEAD --merges --pretty=format:'%H' || true)

          {
            echo "Automated release for version v$version."
            echo
            echo "## Pull Requests"
          } > release-notes.md

          if [ -z "$merge_commits" ]; then
            echo "- No pull requests merged since main." >> release-notes.md
          else
            for sha in $merge_commits; do
              pr_number=$(git show --no-notes --format=%B -s "$sha" | sed -n 's/^Merge pull request #\([0-9]\+\).*/\1/p' | head -n1)
              if [ -z "$pr_number" ]; then
                continue
              fi

              pr_data=$(gh api "repos/$repo/pulls/$pr_number" --jq '{number: .number, title: .title, body: .body}')
              pr_title=$(echo "$pr_data" | jq -r '.title')
              pr_body=$(echo "$pr_data" | jq -r '.body // ""')

              echo "- PR #$pr_number: $pr_title" >> release-notes.md
              if [ -n "$pr_body" ]; then
                echo >> release-notes.md
                printf '%s\n' "$pr_body" >> release-notes.md
                echo >> release-notes.md
              fi
            done
          fi

      - name: Tag release
        run: |
          version="${{ steps.package_version.outputs.version }}"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag -f "v$version"
          git push origin "refs/tags/v$version" --force

      - name: Publish GitHub release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.package_version.outputs.version }}
          name: v${{ steps.package_version.outputs.version }}
          body_path: release-notes.md
          files: out/*.nupkg
